-- Deptos

CREATE OR REPLACE FUNCTION DEPTOS.genera_id_departamentos
RETURN NUMBER 
IS
   id_r NUMBER;
BEGIN
  begin 
    SELECT DECODE(max(t.ID_DEPTO)+1,NULL,1,max(t.ID_DEPTO)+1) into id_r
    FROM T_DEPTOS t;
    EXCEPTION WHEN NO_DATA_FOUND THEN id_r:=0;
  end;
  return id_r;
END;

CREATE OR REPLACE FUNCTION DEPTOS.VALIDA_DEPTOS (id NUMBER)
RETURN NUMBER 
IS
   id_r NUMBER;
BEGIN
  begin 
	  
      SELECT td.ID_DEPTO INTO id_r
      FROM T_DEPTOS td 
      WHERE td.ID_DEPTO = id;
      EXCEPTION WHEN NO_DATA_FOUND THEN id_r:=0;
  end;
  return id_r;
END;

CREATE OR REPLACE PROCEDURE DEPTOS.elimina_DEPTOS(id number) IS
BEGIN
  DELETE 
  FROM T_DEPTOS td 
  WHERE TD.ID_DEPTO = ID;
END;

CREATE OR REPLACE PROCEDURE DEPTOS.actualiza_deptos(
  id IN NUMBER,
  Num IN VARCHAR2,
  dep IN VARCHAR2,
  direc IN VARCHAR2,
  id_e IN NUMBER
) IS
BEGIN
  UPDATE T_DEPTOS TE
  SET TE.NUMERO = Num,
  te.DEPTO = dep,
  te.DIRECCION = direc,
  te.ID_EDIF = id_e
  WHERE TE.id_depto=id;
  COMMIT;
END;

CREATE OR REPLACE FORCE VIEW "DEPTOS"."VISTA_DEPTOS" AS 
  SELECT TD.ID_DEPTO,TD.NUMERO,TD.DEPTO,
  TD.DIRECCION,TD.ID_EDIF,TE.EDIFICIO,TE.DIRECCION DIRECCION_E 
  FROM T_DEPTOS td,T_EDIFICIOS te
  WHERE TE.ID_EDIF = TD.ID_EDIF;
